basePath: /api
definitions:
  expense.Expense:
    properties:
      group:
        $ref: '#/definitions/group.Group'
      groupId:
        type: integer
      id:
        type: integer
      label:
        $ref: '#/definitions/label.Label'
      labelId:
        type: integer
      name:
        description: gorm.Model
        type: string
    type: object
  group.Group:
    properties:
      id:
        type: integer
      name:
        description: gorm.Model
        type: string
      users:
        items:
          $ref: '#/definitions/group.GroupUser'
        type: array
    type: object
  group.GroupUser:
    properties:
      groupId:
        type: integer
      userId:
        type: string
    type: object
  label.Label:
    properties:
      group:
        $ref: '#/definitions/group.Group'
      groupId:
        type: integer
      id:
        type: integer
      name:
        description: gorm.Model
        type: string
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      photoUrl:
        type: string
    type: object
host: localhost:5000
info:
  contact: {}
  description: 'Project to control budget for home.\n\nAuthorization header: insert
    your access token default (Bearer TOKEN)'
  title: budget4home API
  version: "1.0"
paths:
  /expenses:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Expenses
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/expense.Expense'
      security:
      - ApiKeyAuth: []
      tags:
      - Expenses
    post:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Expenses
    put:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Expenses
  /expenses/full:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Expenses
  /groups:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Groups
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.Group'
      security:
      - ApiKeyAuth: []
      tags:
      - Groups
    post:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Groups
    put:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Groups
  /groups/full:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Groups
  /labels:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Labels
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/label.Label'
      security:
      - ApiKeyAuth: []
      tags:
      - Labels
    post:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Labels
    put:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Labels
  /labels/full:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - ApiKeyAuth: []
      tags:
      - Labels
  /users:
    get:
      consumes:
      - application/json
      description: get list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Show a list of users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
